---

---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>DDR Finder</title>
    <!-- ddr-finder-ng | https://github.com/Andrew67/ddr-finder-ng/blob/master/LICENSE -->
    <meta name="viewport" content="width=device-width" />
    <meta name="color-scheme" content="light dark" />
    <meta name="theme-color" content="#1976d2" />
    <link rel="icon" href="/favicon.png" type="image/png" />
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" />
    <meta property="og:title" content="DDR Finder â€” Nearby Arcades" />
    <meta
      property="og:description"
      content="Locate crowd-sourced video game arcades near you"
    />
    <meta
      property="og:image"
      content="https://ddrfinder.andrew67.com/images/arcade-machine.jpg"
    />
    <!-- Backup redirect if JS doesn't run -->
    <!-- See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/Redirections#order_of_precedence -->
    <meta http-equiv="refresh" content="0; url=/app/nearby" />
  </head>
  <body>
    <script is:inline>
      let latitude, longitude, dataSrc;

      // Passing in loc=accuracy/latitude/longitude in hash/search bypasses original behavior of geolocation on page load.
      // Note: the pattern is set up to accept a loc=latitude/longitude format due to a time period where it was optional.
      const locPattern = /[#&?]loc=(.*\/)?(.*)\/([^&]*)/;
      if (locPattern.test(location.href)) {
        const locParams = locPattern.exec(location.href);
        latitude = locParams[2];
        longitude = locParams[3];
      }

      // Passing in src=datasrc in hash/search bypasses original behavior of picking data source from localStorage on page load.
      const srcPattern = /[#&?]src=([^&]*)/;
      if (srcPattern.test(location.href)) {
        const srcParam = srcPattern.exec(location.href);
        dataSrc = srcParam[1];
      }

      const newParams = new URLSearchParams();
      if (latitude && longitude)
        newParams.set("ll", `${latitude},${longitude}`);
      if (dataSrc) newParams.set("src", dataSrc);
      const newParamString = newParams.toString().replace("%2C", ",");

      window.location.replace(
        `/app/nearby${newParamString ? `?${newParamString}` : ""}`,
      );
    </script>
    <a href="/app/nearby">Click here for the new app experience</a>
  </body>
</html>
